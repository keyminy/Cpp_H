#include <iostream>
#pragma warning (disable : 4996)

using std::cout;
using std::cin;
using std::endl;

int main() {
	int a = 5;
	// 포인터가 가리키는 메모리의 값을 수정할 수 없다(*p=99불가)
	const int* p = &a;

	//*p = 99; // a = 99(p가 참조하고 있는 곳 변경)
	cout << a << endl; //99

	//////////////////////////////////////////////////////////
	int b = 10;
	int* const ptr = &b;

	// 포인터의 주소 값을 변경할 수 없다.
	//ptr = &a; // error // 포인터는 변수기 때문에 다른 주소를 저장할 수 있다.

	/////////////////////////////////////////////////////////////
	int c = 10;
	//p2가 가리키는 대상을 바꿀 수 없다.(앞 const)
	//p2의 주소값을 변경할 수 없다.(뒤 const)
	const int* const p2 = &c;
	////////////////////////////////////////////////////////////

	int d = 10;
	const int& ref = d; //d변수를 ref변수와 메모리 공유

	//레퍼런스 상수화 : d의 값은 변경가능하나, 레퍼런스로 공유하는 메모리의 값을 변경할 수 없다.
	//ref = 67; // error가 난다.

	d = 67;//이건 당연히 가능
	cout << d << endl; // 67(메모리를 공유하므로)

	return 0;
}